<div class="row">
  <div class="col-10 offset-1">
    <div class="space-break"></div>
    <div class="page-title">Paint</div>
  <!-- <div class="wip-watermark">Work In Progress</div> -->
  </div>
</div>

<br><br>
<div class="pen-coordinate">&nbsp;</div>
<div class="row no-gutters disable-select">
  <div class="col-10 offset-1">
    <div id="page-yield" data-pagename="Paint">
      
      <div id="paint-area">
        <div class="row no-gutters disable-select">
          <div class="col-12">
            <div id="paint-pen-color-area">
              <div id="pen-area">
                <div id="pen-select">
                  <div id="pen-shape-select">
                    <div id="pen-shape-square" class="pen-shape">
                      <canvas id="pen-shape-square-canvas" class="pen-shape-canvas" data-shapedata="square"></canvas>
                    </div>
                    <div id="pen-shape-rectangle" class="pen-shape">
                      <canvas id="pen-shape-rectangle-canvas" class="pen-shape-canvas" data-shapedata="rectangle"></canvas>
                    </div>
                    <div id="pen-shape-circle" class="pen-shape">
                      <canvas id="pen-shape-circle-canvas" class="pen-shape-canvas" data-shapedata="circle"></canvas>
                    </div>
                    <div id="pen-shape-arc" class="pen-shape">
                      <canvas id="pen-shape-arc-canvas" class="pen-shape-canvas" data-shapedata="arc"></canvas>
                    </div>
                    <div id="pen-shape-line" class="pen-shape">
                      <canvas id="pen-shape-line-canvas" class="pen-shape-canvas" data-shapedata="line"></canvas>
                    </div>
                    <div id="pen-shape-polygon" class="pen-shape">
                      <canvas id="pen-shape-polygon-canvas" class="pen-shape-canvas" data-shapedata="polygon"></canvas>
                    </div>
                  </div>
                </div>
                <div id="pen-size-select">
                  <div id="pen-size-display">&nbsp;</div>
                  <div id="pen-size-selector"></div>
                </div>
              </div>
              <div id="color-area">
                <div id="color-select-area"></div>
                <div id="selected-color"></div>
              </div>
            </div>
            <canvas id="paint-draw-area">

            </canvas>
          </div>
        </div>
      </div>

    </div>
  </div>
</div>

<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script>

  var mouseStatus = false;
  var penColor = "000000";
  var outlineColor = penColor;
  var penSize = 5;
  var scaleX = $('#paint-draw-area').width() / penSize;
  var scaleY = $('#paint-draw-area').height() / penSize;
  var penShape = 'square'

  
  var colorsArr = [
  ['#F9EBEA','#FDEDEC','#F5EEF8','#F4ECF7','#EAF2F8','#EBF5FB','#E8F8F5','#E8F6F3','#E9F7EF','#EAFAF1','#FEF9E7','#FEF5E7','#FDF2E9','#FBEEE6','#FDFEFE','#F8F9F9','#F4F6F6','#F2F4F4','#EBEDEF','#EAECEE'],
  ['#F2D7D5','#FADBD8','#EBDEF0','#E8DAEF','#D4E6F1','#D6EAF8','#D1F2EB','#D0ECE7','#D4EFDF','#D5F5E3','#FCF3CF','#FDEBD0','#FAE5D3','#F6DDCC','#FBFCFC','#F2F3F4','#EAEDED','#E5E8E8','#D6DBDF','#D5D8DC'],
  ['#E6B0AA','#F5B7B1','#D7BDE2','#D2B4DE','#A9CCE3','#AED6F1','#A3E4D7','#A2D9CE','#A9DFBF','#ABEBC6','#F9E79F','#FAD7A0','#F5CBA7','#EDBB99','#F7F9F9','#E5E7E9','#D5DBDB','#CCD1D1','#AEB6BF','#ABB2B9'],
  ['#D98880','#F1948A','#C39BD3','#BB8FCE','#7FB3D5','#85C1E9','#76D7C4','#73C6B6','#7DCEA0','#82E0AA','#F7DC6F','#F8C471','#F0B27A','#E59866','#F4F6F7','#D7DBDD','#BFC9CA','#B2BABB','#85929E','#808B96'],
  ['#CD6155','#EC7063','#AF7AC5','#A569BD','#5499C7','#5DADE2','#48C9B0','#45B39D','#52BE80','#58D68D','#F4D03F','#F5B041','#EB984E','#DC7633','#F0F3F4','#CACFD2','#AAB7B8','#99A3A4','#5D6D7E','#566573'],
  ['#C0392B','#E74C3C','#9B59B6','#8E44AD','#2980B9','#3498DB','#1ABC9C','#16A085','#27AE60','#2ECC71','#F1C40F','#F39C12','#E67E22','#D35400','#ECF0F1','#BDC3C7','#95A5A6','#7F8C8D','#34495E','#2C3E50'],
  ['#A93226','#CB4335','#884EA0','#7D3C98','#2471A3','#2E86C1','#17A589','#138D75','#229954','#28B463','#D4AC0D','#D68910','#CA6F1E','#BA4A00','#D0D3D4','#A6ACAF','#839192','#707B7C','#2E4053','#273746'],
  ['#922B21','#B03A2E','#76448A','#6C3483','#1F618D','#2874A6','#148F77','#117A65','#1E8449','#239B56','#B7950B','#B9770E','#AF601A','#A04000','#B3B6B7','#909497','#717D7E','#616A6B','#283747','#212F3D'],
  ['#7B241C','#943126','#633974','#5B2C6F','#1A5276','#21618C','#117864','#0E6655','#196F3D','#1D8348','#9A7D0A','#9C640C','#935116','#873600','#979A9A','#797D7F','#5F6A6A','#515A5A','#212F3C','#1C2833'],
  ['#641E16','#78281F','#512E5F','#4A235A','#154360','#1B4F72','#0E6251','#0B5345','#145A32','#186A3B','#7D6608','#7E5109','#784212','#6E2C00','#7B7D7D','#626567','#4D5656','#424949','#1B2631','#17202A']
  ];

  var shapeArr = ['square', 'rectangle', 'circle', 'arc', 'line', 'polygon'];

  function deg2rad(inDegrees) {
    return inDegrees * Math.PI / 180;
  }

  function polar2cart(inRadius, inAngle) {
    return [Math.round((inRadius * Math.cos(deg2rad(inAngle)))), Math.round((inRadius * Math.sin(deg2rad(inAngle))))];
  }

  function generatePolygon(numberOfSides, inRadius, canvasClassID, startAngleOffset) {
    if (numberOfSides < 3) { throw "Polygon Must Have 3 Or More Sides"; }

    var totalDegrees = (numberOfSides - 2) * 180;
    var internalAngles = totalDegrees / numberOfSides;
    var polarAngles = 360 / numberOfSides;

    var canvHeight = $(canvasClassID).height();
    var canvWidth = $(canvasClassID).width();
    var canvCenter = (canvWidth / 2);

    // console.log(inRadius);

    var dpCanv = $(canvasClassID)[0];

    var dpCTX = dpCanv.getContext("2d");
    var coordArr = [];
    for (i=1; i<numberOfSides+2; i++) {
      var p2c = polar2cart(inRadius, ((polarAngles  * i) + startAngleOffset));

      // console.log((polarAngles * i),canvCenter + p2c[0],canvCenter + p2c[1],p2c);
      // console.log(inRadius, (polarAngles * i));

      coordArr.push(p2c);
    }

    dpCTX.moveTo(canvCenter + coordArr[0][0],canvCenter + coordArr[0][1]);
    for (i=1; i<coordArr.length; i++) {
      dpCTX.lineTo(canvCenter + coordArr[i][0],canvCenter + coordArr[i][1]);
    }
    dpCTX.stroke();


  }

  function drawPolygon(numberOfSides, inRadius, currentCenterX, currentCenterY, canvasClassID, startAngleOffset) {
    if (numberOfSides < 3) { throw "Polygon Must Have 3 Or More Sides"; }

    var totalDegrees = (numberOfSides - 2) * 180;
    var internalAngles = totalDegrees / numberOfSides;
    var polarAngles = 360 / numberOfSides;

    var dpCanv = $(canvasClassID)[0];

    var dpCTX = dpCanv.getContext("2d");
    var coordArr = [];
    for (i=1; i<numberOfSides+2; i++) {
      var p2c = polar2cart(inRadius, ((polarAngles  * i) + startAngleOffset));
      coordArr.push(p2c);
    }

    dpCTX.moveTo(currentCenterX + coordArr[0][0],currentCenterY + coordArr[0][1]);
    for (i=1; i<coordArr.length; i++) {
      dpCTX.lineTo(currentCenterX + coordArr[i][0],currentCenterY + coordArr[i][1]);
    }
    dpCTX.stroke();
  }

  $(function(_DrawFunction) {

    function penShapeDraw(inShape, canvasClassID, event) {
      var sdCanvas = $(canvasClassID)[0];
      var sdCTX = sdCanvas.getContext("2d");

      var mOffset = $(canvasClassID).offset();
      var mX = event.offsetX;
      var mY = event.offsetY;

      if (inShape == 'square') {
        sdCTX.beginPath();
        sdCTX.fillStyle = penColor;
        sdCTX.strokeStyle = outlineColor;

        sdCTX.rect(mX,mY,penSize,penSize);
        sdCTX.closePath();
        sdCTX.fill();
        sdCTX.stroke();
      } else if (inShape == 'rectangle') {
        sdCTX.beginPath();
        sdCTX.fillStyle = penColor;
        sdCTX.strokeStyle = outlineColor;
        sdCTX.rect(mX,mY-5,penSize,penSize);
        sdCTX.closePath();
        sdCTX.fill();
        sdCTX.stroke();
      } else if (inShape == 'circle') {
        sdCTX.beginPath();
        sdCTX.fillStyle = penColor;
        sdCTX.strokeStyle = outlineColor;
        sdCTX.arc(mX,mY,penSize,0,(2 * Math.PI));
        sdCTX.closePath();
        sdCTX.fill();
        sdCTX.stroke();
      } else if (inShape == 'arc') {
        sdCTX.beginPath();
        sdCTX.fillStyle = penColor;
        sdCTX.strokeStyle = outlineColor;
        sdCTX.arc(mX,mY,penSize,0,(1 * Math.PI));
        sdCTX.closePath();
        sdCTX.fill();
        sdCTX.stroke();
      } else if (inShape == 'line') {
        sdCTX.beginPath();
        sdCTX.fillStyle = penColor;
        sdCTX.strokeStyle = outlineColor;

        sdCTX.closePath();
        sdCTX.fill();
        sdCTX.stroke();
      } else if (inShape == 'polygon') {
        sdCTX.beginPath();
        sdCTX.fillStyle = penColor;
        sdCTX.strokeStyle = outlineColor;
        drawPolygon(8, penSize, mX, mY, 'canvas#paint-draw-area', 0);
        sdCTX.closePath();
        sdCTX.fill();
        sdCTX.stroke();
      }
    }

    $('canvas#paint-draw-area').attr('width', $('canvas#paint-draw-area').width());
    $('canvas#paint-draw-area').attr('height', $('canvas#paint-draw-area').height());

    var dCanvas = $('#paint-draw-area')[0];
    var dCTX = dCanvas.getContext("2d");

    $('#paint-draw-area').on('mousedown', function(event) {
      mouseStatus = true;
    });

    $(document).on('mouseup',function(event) {
        mouseStatus = false;
    });

    $('#paint-draw-area').on('mousemove', function(event) {

      if (mouseStatus == true) {
        
        penShapeDraw(penShape, '#paint-draw-area', event);
      }
      
    });


  });

  $(function(_ColorSizeSelectFunction) {
    
    for (j=0; j < colorsArr.length; j++) {
      $('#color-select-area').append('<div id="color-row-'+j+'" class="color-row"></div>');
      for (i=0; i < colorsArr[j].length; i++) {
        $('#color-row-'+j).append('<div id="color-square-'+((j*20)+i).toString()+'" class="color-square" data-squarecolor="'+colorsArr[j][i]+'""></div>');
        $('#color-square-'+((j*20)+i).toString()).css({'background-color':colorsArr[j][i],
          'float':'left',
          'margin':'0px'
        });
      }
    }

    $('.color-square').on('click', function(event) {
      penColor = $(event['currentTarget']).data('squarecolor');
      outlineColor = penColor;
      $('#selected-color').css('background-color',penColor);
      $('#selected-color').css('border-color',outlineColor);
    });

  });

  $(function() {
    
    $('#pen-size-display').empty();
    $('#pen-size-display').append(penSize);
    
    $('#pen-size-selector').slider({
      value: penSize,
      min: 1,
      max: 100,
      slide: function(event, ui) {
        penSize = ui['value'];
        $('#pen-size-display').empty();
        $('#pen-size-display').append(penSize);
      }
    });

  });

  $(function(_ShapeSelectFunction) {

    

    

    ////
    // Pen Shape Select Button Graphics

    $('canvas.pen-shape-canvas').attr('height', $('canvas.pen-shape-canvas').height());
    $('canvas.pen-shape-canvas').attr('width', $('canvas.pen-shape-canvas').width());

    var penShapeCanvasHeight = $('canvas.pen-shape-canvas').height();
    var penShapeCanvasWidth = $('canvas.pen-shape-canvas').width();
    var penShapeCanvasCenter = (penShapeCanvasWidth / 2);

    var canvasSquare = $('#pen-shape-square-canvas')[0];
    var canvasRectangle = $('#pen-shape-rectangle-canvas')[0];
    var canvasCircle = $('#pen-shape-circle-canvas')[0];
    var canvasArc = $('#pen-shape-arc-canvas')[0];
    var canvasLine = $('#pen-shape-line-canvas')[0];
    // var canvasPolygon = $('#pen-shape-polygon-canvas')[0];

    var ctxSquare = canvasSquare.getContext("2d");
    var ctxRectangle = canvasRectangle.getContext("2d");
    var ctxCircle = canvasCircle.getContext("2d");
    var ctxArc = canvasArc.getContext("2d");
    var ctxLine = canvasLine.getContext("2d");
    // var ctxPolygon = canvasPolygon.getContext("2d");
    
    var offsetStart = 5;
    var offsetEnd = penShapeCanvasWidth - offsetStart;
    var offsetEnd2 = penShapeCanvasWidth - (offsetStart * 2);
    var offsetRadius = (offsetEnd / 2);
    var offsetRadius2 = (offsetEnd2 / 2);


    // Draw Square
    ctxSquare.moveTo(offsetStart,offsetStart);
    ctxSquare.rect(offsetStart,offsetStart,offsetEnd2,offsetEnd2);
    ctxSquare.stroke();

    // Draw Rectangle
    ctxRectangle.moveTo(offsetStart,offsetStart);
    ctxRectangle.rect(offsetStart,offsetStart,offsetEnd2,(offsetEnd2-5));
    ctxRectangle.stroke();

    // Draw Circle
    ctxCircle.moveTo((penShapeCanvasCenter + offsetRadius),penShapeCanvasCenter);
    ctxCircle.arc(penShapeCanvasCenter,penShapeCanvasCenter,offsetRadius,0,(2 * Math.PI));
    ctxCircle.stroke();

    // Draw Arc
    ctxArc.moveTo((penShapeCanvasCenter + offsetRadius),penShapeCanvasCenter);
    ctxArc.arc(penShapeCanvasCenter,penShapeCanvasCenter,offsetRadius,0,(1.25 * Math.PI));
    ctxArc.stroke();

    // Draw Line
    ctxLine.moveTo(offsetStart,offsetStart);
    ctxLine.lineTo(offsetEnd,offsetEnd);
    ctxLine.stroke();

    // Draw Polygon
    generatePolygon(8,12,'canvas#pen-shape-polygon-canvas',22.5);
    ////

    ////
    // Pen Shape Select Functionality

    $('canvas.pen-shape-canvas').on('click', function(event) {
      penShape = $(event['currentTarget']).data('shapedata');
      $('.'+event['currentTarget']['className']).css('background-color', '#FFFFFF');
      $('#'+event['currentTarget']['id']).css('background-color', '#AAAAAA');
    });

    ////
  });

</script>